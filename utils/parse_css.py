import json
import re

def extract_css_from_js(js_content):
    # Pattern to extract the JSON array containing the CSS
    pattern = re.compile(r'mw\.loader\.impl\(function\(\)\{return(\[.*?\])\;\}\);', re.DOTALL)
    match = pattern.search(js_content)
    if match:
        # Convert the matched string back to a Python list
        data = json.loads(match.group(1))
        # Find the dictionary that contains the 'css' key
        for item in data:
            if isinstance(item, dict) and 'css' in item:
                # The CSS content is within a list under the 'css' key
                css_list = item['css']
                if css_list:
                    # Join all CSS items into one string and clean it
                    css_string = ' '.join(css_list)
                    # Replace unicode escape sequences
                    css_string = css_string.encode('utf-8').decode('unicode_escape')
                    return css_string
    return "CSS not found or parsing error."

dummy_js_css_input = """mw.loader.impl(function(){return["site.styles@7sjrl",null,{"css":["cite,dfn{font-style:inherit} q{quotes:'\"' '\"' \"'\" \"'\"} blockquote{overflow:hidden;margin:1em 0;padding:0 40px} small{font-size:85%}.mw-body-content sub,.mw-body-content sup{font-size:80%} .ns-talk .mw-body-content dd{margin-top:0.4em;margin-bottom:0.4em} .client-js .collapsible:not(.mw-made-collapsible).collapsed \u003E tbody \u003E tr:not(:first-child),    .client-js .outercollapse .innercollapse.mw-collapsible:not(.mw-made-collapsible) \u003E p,.client-js .outercollapse .innercollapse.mw-collapsible:not(.mw-made-collapsible) \u003E table,.client-js .outercollapse .innercollapse.mw-collapsible:not(.mw-made-collapsible) \u003E thead + tbody,.client-js .outercollapse .innercollapse.mw-collapsible:not(.mw-made-collapsible) tr:not(:first-child),.client-js .outercollapse .innercollapse.mw-collapsible:not(.mw-made-collapsible) .mw-collapsible-content, #editpage-specialchars{display:none} ol.references{font-size:90%;margin-bottom:0.5em} span[rel=\"mw:referencedBy\"]{counter-reset:mw-ref-linkback 0}span[rel='mw:referencedBy'] \u003E a::before{content:counter(mw-ref-linkback,lower-alpha);font-size:80%;font-weight:bold;font-style:italic}a[rel=\"mw:referencedBy\"]::before{font-weight:bold;content:\"^\"}span[rel=\"mw:referencedBy\"]::before{content:\"^ \"}.mw-ref \u003E a[data-mw-group=lower-alpha]::after{content:'[' counter(mw-Ref,lower-alpha) ']'}.mw-ref \u003E a[data-mw-group=upper-alpha]::after{content:'[' counter(mw-Ref,upper-alpha) ']'}.mw-ref \u003E a[data-mw-group=decimal]::after{content:'[' counter(mw-Ref,decimal) ']'}.mw-ref \u003E a[data-mw-group=lower-roman]::after{content:'[' counter(mw-Ref,lower-roman) ']'}.mw-ref \u003E a[data-mw-group=upper-roman]::after{content:'[' counter(mw-Ref,upper-roman) ']'}.mw-ref \u003E a[data-mw-group=lower-greek]::after{content:'[' counter(mw-Ref,lower-greek) ']'} .mw-parser-output .mw-collapsible-toggle:not(.mw-ui-button){font-weight:normal;padding-right:0.2em;padding-left:0.2em}.mw-collapsible-leftside-toggle .mw-collapsible-toggle{ float:left} .wikitable td ul,.wikitable td ol,.wikitable td dl{ text-align:left} .mw-parser-output a[href$=\".pdf\"].external,.mw-parser-output a[href*=\".pdf?\"].external,.mw-parser-output a[href*=\".pdf#\"].external,.mw-parser-output a[href$=\".PDF\"].external,.mw-parser-output a[href*=\".PDF?\"].external,.mw-parser-output a[href*=\".PDF#\"].external{background:url(//upload.wikimedia.org/wikipedia/commons/4/4d/Icon_pdf_file.png) no-repeat right; padding:8px 18px 8px 0}  .mw-warning-with-logexcerpt.mw-warning-with-logexcerpt.mw-warning-with-logexcerpt,div.mw-lag-warn-high,div.mw-cascadeprotectedwarning,div#mw-protect-cascadeon{clear:both;margin:0.2em 0;border:1px solid #bb7070;background-color:#ffdbdb;padding:0.25em 0.9em;box-sizing:border-box}  .mw-contributions-blocked-notice-partial .mw-warning-with-logexcerpt.mw-warning-with-logexcerpt{border-color:#fc3;background-color:#fef6e7} figure[typeof~='mw:File/Thumb'],figure[typeof~='mw:File/Frame'],.thumbinner{min-width:100px} #mw-subcategories,#mw-pages,#mw-category-media,#filehistory,#wikiPreview,#wikiDiff{clear:both} .mw-tag-markers{font-style:italic;font-size:90%} .checkuser-show,.sysop-show,.abusefilter-show,.abusefilter-helper-show,.patroller-show,.templateeditor-show,.extendedmover-show,.extendedconfirmed-show,.autoconfirmed-show,.user-show{display:none} .ve-ui-mwNoticesPopupTool-item .editnotice-redlink,.ve-ui-mwNoticesPopupTool-item .mbox-image,.ve-ui-mwNoticesPopupTool-item .mbox-imageright{display:none !important} ul.permissions-errors{margin:0}ul.permissions-errors \u003E li{list-style:none} span.mwe-math-mathml-inline{font-size:118%} .mwe-math-fallback-image-display,.mwe-math-mathml-display{margin-left:1.6em !important;margin-top:0.6em;margin-bottom:0.6em}.mwe-math-mathml-display math{display:inline}@media screen{ body:not(.ns-0):not(.ns-2):not(.ns-100) .gallerybox .thumb img{background:#fff url(//upload.wikimedia.org/wikipedia/commons/5/5d/Checker-16x16.png) repeat} #siteSub{display:block}} .flaggedrevs_draft_synced,.flaggedrevs_stable_synced, #t-upload, .mw-special-Book #coll-downloadbox{display:none}  .infobox{border:1px solid #a2a9b1;border-spacing:3px;background-color:#f8f9fa;color:black; margin:0.5em 0 0.5em 1em;padding:0.2em; float:right; clear:right;font-size:88%;line-height:1.5em;width:22em}.infobox-header,.infobox-label,.infobox-above,.infobox-full-data,.infobox-data,.infobox-below,.infobox-subheader,.infobox-image,.infobox-navbar, .infobox th,.infobox td{vertical-align:top}.infobox-label,.infobox-data, .infobox th,.infobox td{ text-align:left} .infobox .infobox-above,.infobox .infobox-title, .infobox caption{font-size:125%;font-weight:bold;text-align:center}.infobox-title, .infobox caption{padding:0.2em} .infobox .infobox-header,.infobox .infobox-subheader,.infobox .infobox-image,.infobox .infobox-full-data,.infobox .infobox-below{text-align:center} .infobox .infobox-navbar{ text-align:right} .wikitable.plainrowheaders th[scope=row],.wikitable.plainrowheaders th[scope=rowgroup]{font-weight:normal; text-align:left} .nounderlines a,.IPA a:link,.IPA a:visited{text-decoration:none !important} .nowrap,.nowraplinks a{white-space:nowrap} .wrap,.wraplinks a{white-space:normal} span.texhtml{font-family:\"Nimbus Roman No9 L\",\"Times New Roman\",Times,serif;font-size:118%;line-height:1;white-space:nowrap; font-variant-numeric:lining-nums tabular-nums;font-kerning:none}span.texhtml span.texhtml{font-size:100%}@media screen{.nochecker .gallerybox .thumb img{background-image:none}}","@media print {\n\t.ns--1 .ambox,.ns-0 .ambox,.ns--1 .navbox,.ns-0 .navbox, .mediawiki.ns--1 .mw-parser-output .sidebar,.mediawiki.ns-0 .mw-parser-output .sidebar,.ns--1 .sisterproject,.ns-0 .sisterproject,.ns--1 .hatnote,.ns-0 .hatnote,.ns--1 .metadata,.ns-0 .metadata,.sistersitebox,.editlink,.navbar,span.mw-collapsible-toggle,th .sortkey,td .sortkey,#mw-revision-nav, .nourlexpansion a.external.text:after,.nourlexpansion a.external.autonumber:after{display:none !important} .mw-parser-output .mw-collapsed .mw-collapsible-content{display:block !important}table.collapsible tr,.mw-parser-output table.mw-collapsed \u003E * \u003E tr{display:table-row !important}.mw-parser-output ol.mw-collapsed \u003E li,.mw-parser-output ul.mw-collapsed \u003E li{display:list-item !important} #firstHeading{margin:0} #content a.external.text:after,#content a.external.autonumber:after{word-wrap:break-word} .infobox{border:solid 1px #aaa;background-color:#fff;border-spacing:0;border-collapse:collapse;width:180pt !important; }.infobox \u003E * \u003E tr \u003E td,.infobox \u003E * \u003E tr \u003E th{padding:2px 5px;border-bottom:1px solid #EAECF0} .infobox a, .infobox \u003E * \u003E tr:last-child \u003E th,.infobox \u003E * \u003E tr:last-child \u003E td{border:0} .refbegin a,.references a,.reference a{color:black !important}.reference a{border-bottom:0}ol.references,div.reflist,div.refbegin,cite *{ font-size:inherit !important}.refbegin li,.references li{color:#666;line-height:14pt}.printfooter{clear:both}}"]}];});"""

# Extract and print the cleaned CSS
extracted_css = extract_css_from_js(dummy_js_css_input)
print(extracted_css)